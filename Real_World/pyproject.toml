[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ultrafastnet"
version = "0.1.0"
description = "Ultra-fast packet-switching neural network library"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Aneesh H Vishwamitra", email = "aneeshvish4@gmail.com"}
]
maintainers = [
    {name = "Aneesh H Vishwamitra", email = "aneeshvish4@gmail.com"}
]
keywords = [
    "neural-networks",
    "packet-switching", 
    "machine-learning",
    "deep-learning",
    "numpy",
    "high-performance"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "twine>=4.0.0",
    "build>=0.8.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "myst-parser>=0.18.0",
    "nbsphinx>=0.8.0"
]
examples = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "jupyter>=1.0.0",
    "pandas>=1.4.0"
]
all = [
    "ultrafastnet[dev,docs,examples]"
]

[project.urls]
Homepage = "https://github.com/AneeshVish/ultrafastnet.git"
Repository = "https://github.com/AneeshVish/ultrafastnet.git"
Issues = "https://github.com/AneeshVish/ultrafastnet.git/issues"
Changelog = "https://github.com/AneeshVish/ultrafastnet.git/blob/main/CHANGELOG.md"
Documentation = "https://github.com/AneeshVish/ultrafastnet.git"

[project.scripts]
ultrafastnet-benchmark = "ultrafastnet.examples.benchmarking:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["ultrafastnet*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
ultrafastnet = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["ultrafastnet"]
known_third_party = ["numpy", "scipy", "pytest"]

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "matplotlib.*",
    "seaborn.*",
    "pandas.*"
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=ultrafastnet",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80"
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]

# Coverage configuration
[tool.coverage.run]
source = ["ultrafastnet"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/docs/*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.coverage.html]
directory = "htmlcov"